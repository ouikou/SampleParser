/* Generated By:JavaCC: Do not edit this line. TMParserTreeConstants.java Version 5.0 */
package parser.textmodel.ast;

public interface TMParserTreeConstants
{
  public int JJTVARIABLEMODELCOMMENT = 0;
  public int JJTFUNCTIONMODELCOMMENT = 1;
  public int JJTFLOWMODELCOMMENT = 2;
  public int JJTCOMMENTANNONAME = 3;
  public int JJTCOMMENTANNOPARAM = 4;
  public int JJTTEXTMODELDECLARATION = 5;
  public int JJTVARIABLEMODELDECLARATION = 6;
  public int JJTFUNCTIONMODELDECLARATION = 7;
  public int JJTFUNCTIONMODELDEFINITION = 8;
  public int JJTFLOWMODELDEFINITION = 9;
  public int JJTTRANSLATIONUNIT = 10;
  public int JJTEXTERNALDECLARATION = 11;
  public int JJTFUNCTIONDEFINITION = 12;
  public int JJTDECLARATION = 13;
  public int JJTFUNCTIONDECLARATION = 14;
  public int JJTVARIABLEDECLARATION = 15;
  public int JJTDECLARATIONLIST = 16;
  public int JJTFUNCTIONDECLARATIONLIST = 17;
  public int JJTVARIABLEDECLARATIONLIST = 18;
  public int JJTDECLARATIONSPECIFIERS = 19;
  public int JJTMULTIDECLARATIONSPECIFIERS = 20;
  public int JJTSTORAGECLASSSPECIFIER = 21;
  public int JJTTYPESPECIFIER = 22;
  public int JJTMULTITYPESPECIFIER = 23;
  public int JJTTYPEQUALIFIER = 24;
  public int JJTSTRUCTORUNIONSPECIFIER = 25;
  public int JJTSTRUCTORUNION = 26;
  public int JJTSTRUCTDECLARATIONLIST = 27;
  public int JJTINITDECLARATORLIST = 28;
  public int JJTFUNCTIONINITDECLARATORLIST = 29;
  public int JJTVARIABLEINITDECLARATORLIST = 30;
  public int JJTINITDECLARATOR = 31;
  public int JJTFUNCTIONINITDECLARATOR = 32;
  public int JJTVARIABLEINITDECLARATOR = 33;
  public int JJTSTRUCTDECLARATION = 34;
  public int JJTSPECIFIERQUALIFIERLIST = 35;
  public int JJTMULTISPECIFIERQUALIFIERLIST = 36;
  public int JJTSTRUCTDECLARATORLIST = 37;
  public int JJTSTRUCTDECLARATOR = 38;
  public int JJTENUMSPECIFIER = 39;
  public int JJTENUMERATORLIST = 40;
  public int JJTENUMERATOR = 41;
  public int JJTDECLARATOR = 42;
  public int JJTPARAMETERDECLARATOR = 43;
  public int JJTFUNCTIONDECLARATOR = 44;
  public int JJTVARIABLEDECLARATOR = 45;
  public int JJTDIRECTDECLARATOR = 46;
  public int JJTFUNCTIONDIRECTDECLARATOR = 47;
  public int JJTFUNCTIONPOINTERDIRECTDECLARATOR = 48;
  public int JJTVARIABLEDIRECTDECLARATOR = 49;
  public int JJTPOINTER = 50;
  public int JJTTYPEQUALIFIERLIST = 51;
  public int JJTPARAMETERTYPELIST = 52;
  public int JJTPARAMETERLIST = 53;
  public int JJTPARAMETERDECLARATION = 54;
  public int JJTIDENTIFIERLIST = 55;
  public int JJTINITIALIZER = 56;
  public int JJTINITIALIZERLIST = 57;
  public int JJTTYPENAME = 58;
  public int JJTABSTRACTDECLARATOR = 59;
  public int JJTDIRECTABSTRACTDECLARATOR = 60;
  public int JJTTYPEDEFNAME = 61;
  public int JJTSTATEMENT = 62;
  public int JJTLABELEDSTATEMENT = 63;
  public int JJTEXPRESSIONSTATEMENT = 64;
  public int JJTCOMPOUNDSTATEMENT = 65;
  public int JJTSTATEMENTLIST = 66;
  public int JJTSELECTIONSTATEMENT = 67;
  public int JJTITERATIONSTATEMENT = 68;
  public int JJTJUMPSTATEMENT = 69;
  public int JJTEXPRESSION = 70;
  public int JJTASSIGNMENTEXPRESSION = 71;
  public int JJTASSIGNMENTOPERATOR = 72;
  public int JJTCONDITIONALEXPRESSION = 73;
  public int JJTCONSTANTEXPRESSION = 74;
  public int JJTLOGICALOREXPRESSION = 75;
  public int JJTLOGICALANDEXPRESSION = 76;
  public int JJTINCLUSIVEOREXPRESSION = 77;
  public int JJTEXCLUSIVEOREXPRESSION = 78;
  public int JJTANDEXPRESSION = 79;
  public int JJTEQUALITYEXPRESSION = 80;
  public int JJTRELATIONALEXPRESSION = 81;
  public int JJTSHIFTEXPRESSION = 82;
  public int JJTADDITIVEEXPRESSION = 83;
  public int JJTMULTIPLICATIVEEXPRESSION = 84;
  public int JJTCASTEXPRESSION = 85;
  public int JJTUNARYEXPRESSION = 86;
  public int JJTUNARYOPERATOR = 87;
  public int JJTPOSTFIXEXPRESSION = 88;
  public int JJTPRIMARYEXPRESSION = 89;
  public int JJTARGUMENTEXPRESSIONLIST = 90;
  public int JJTCONSTANT = 91;


  public String[] jjtNodeName = {
    "VariableModelComment",
    "FunctionModelComment",
    "FlowModelComment",
    "commentAnnoName",
    "commentAnnoParam",
    "TextModelDeclaration",
    "VariableModelDeclaration",
    "FunctionModelDeclaration",
    "FunctionModelDefinition",
    "FlowModelDefinition",
    "TranslationUnit",
    "ExternalDeclaration",
    "FunctionDefinition",
    "Declaration",
    "FunctionDeclaration",
    "VariableDeclaration",
    "DeclarationList",
    "FunctionDeclarationList",
    "VariableDeclarationList",
    "DeclarationSpecifiers",
    "MultiDeclarationSpecifiers",
    "StorageClassSpecifier",
    "TypeSpecifier",
    "MultiTypeSpecifier",
    "TypeQualifier",
    "StructOrUnionSpecifier",
    "StructOrUnion",
    "StructDeclarationList",
    "InitDeclaratorList",
    "FunctionInitDeclaratorList",
    "VariableInitDeclaratorList",
    "InitDeclarator",
    "FunctionInitDeclarator",
    "VariableInitDeclarator",
    "StructDeclaration",
    "SpecifierQualifierList",
    "MultiSpecifierQualifierList",
    "StructDeclaratorList",
    "StructDeclarator",
    "EnumSpecifier",
    "EnumeratorList",
    "Enumerator",
    "Declarator",
    "ParameterDeclarator",
    "FunctionDeclarator",
    "VariableDeclarator",
    "DirectDeclarator",
    "FunctionDirectDeclarator",
    "FunctionPointerDirectDeclarator",
    "VariableDirectDeclarator",
    "Pointer",
    "TypeQualifierList",
    "ParameterTypeList",
    "ParameterList",
    "ParameterDeclaration",
    "IdentifierList",
    "Initializer",
    "InitializerList",
    "TypeName",
    "AbstractDeclarator",
    "DirectAbstractDeclarator",
    "TypedefName",
    "Statement",
    "LabeledStatement",
    "ExpressionStatement",
    "CompoundStatement",
    "StatementList",
    "SelectionStatement",
    "IterationStatement",
    "JumpStatement",
    "Expression",
    "AssignmentExpression",
    "AssignmentOperator",
    "ConditionalExpression",
    "ConstantExpression",
    "LogicalORExpression",
    "LogicalANDExpression",
    "InclusiveORExpression",
    "ExclusiveORExpression",
    "ANDExpression",
    "EqualityExpression",
    "RelationalExpression",
    "ShiftExpression",
    "AdditiveExpression",
    "MultiplicativeExpression",
    "CastExpression",
    "UnaryExpression",
    "UnaryOperator",
    "PostfixExpression",
    "PrimaryExpression",
    "ArgumentExpressionList",
    "Constant",
  };
}
/* JavaCC - OriginalChecksum=05e77185abca9cd66aec7a9e5c75252a (do not edit this line) */
